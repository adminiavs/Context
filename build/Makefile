# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.28

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/b/coder

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/b/coder/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	/usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	/usr/bin/cpack --config ./CPackSourceConfig.cmake /home/b/coder/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/b/coder/build/CMakeFiles /home/b/coder/build//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/b/coder/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named ragger-core

# Build rule for target.
ragger-core: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-core
.PHONY : ragger-core

# fast build rule for target.
ragger-core/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/build
.PHONY : ragger-core/fast

#=============================================================================
# Target rules for targets named ragger

# Build rule for target.
ragger: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger
.PHONY : ragger

# fast build rule for target.
ragger/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger.dir/build.make CMakeFiles/ragger.dir/build
.PHONY : ragger/fast

#=============================================================================
# Target rules for targets named ragger-gui-lib

# Build rule for target.
ragger-gui-lib: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-gui-lib
.PHONY : ragger-gui-lib

# fast build rule for target.
ragger-gui-lib/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui-lib.dir/build.make CMakeFiles/ragger-gui-lib.dir/build
.PHONY : ragger-gui-lib/fast

#=============================================================================
# Target rules for targets named ragger-gui

# Build rule for target.
ragger-gui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-gui
.PHONY : ragger-gui

# fast build rule for target.
ragger-gui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui.dir/build.make CMakeFiles/ragger-gui.dir/build
.PHONY : ragger-gui/fast

#=============================================================================
# Target rules for targets named ragger-console

# Build rule for target.
ragger-console: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-console
.PHONY : ragger-console

# fast build rule for target.
ragger-console/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-console.dir/build.make CMakeFiles/ragger-console.dir/build
.PHONY : ragger-console/fast

#=============================================================================
# Target rules for targets named ragger-working-gui

# Build rule for target.
ragger-working-gui: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-working-gui
.PHONY : ragger-working-gui

# fast build rule for target.
ragger-working-gui/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-working-gui.dir/build.make CMakeFiles/ragger-working-gui.dir/build
.PHONY : ragger-working-gui/fast

#=============================================================================
# Target rules for targets named cpp_parser

# Build rule for target.
cpp_parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 cpp_parser
.PHONY : cpp_parser

# fast build rule for target.
cpp_parser/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_parser.dir/build.make CMakeFiles/cpp_parser.dir/build
.PHONY : cpp_parser/fast

#=============================================================================
# Target rules for targets named bm25_ranker

# Build rule for target.
bm25_ranker: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bm25_ranker
.PHONY : bm25_ranker

# fast build rule for target.
bm25_ranker/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bm25_ranker.dir/build.make CMakeFiles/bm25_ranker.dir/build
.PHONY : bm25_ranker/fast

#=============================================================================
# Target rules for targets named treesitter_parser

# Build rule for target.
treesitter_parser: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 treesitter_parser
.PHONY : treesitter_parser

# fast build rule for target.
treesitter_parser/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/treesitter_parser.dir/build.make CMakeFiles/treesitter_parser.dir/build
.PHONY : treesitter_parser/fast

#=============================================================================
# Target rules for targets named graph_ranker

# Build rule for target.
graph_ranker: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 graph_ranker
.PHONY : graph_ranker

# fast build rule for target.
graph_ranker/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/graph_ranker.dir/build.make CMakeFiles/graph_ranker.dir/build
.PHONY : graph_ranker/fast

#=============================================================================
# Target rules for targets named lsp_client

# Build rule for target.
lsp_client: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lsp_client
.PHONY : lsp_client

# fast build rule for target.
lsp_client/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lsp_client.dir/build.make CMakeFiles/lsp_client.dir/build
.PHONY : lsp_client/fast

#=============================================================================
# Target rules for targets named git_integration

# Build rule for target.
git_integration: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 git_integration
.PHONY : git_integration

# fast build rule for target.
git_integration/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/git_integration.dir/build.make CMakeFiles/git_integration.dir/build
.PHONY : git_integration/fast

#=============================================================================
# Target rules for targets named test_discovery

# Build rule for target.
test_discovery: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 test_discovery
.PHONY : test_discovery

# fast build rule for target.
test_discovery/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_discovery.dir/build.make CMakeFiles/test_discovery.dir/build
.PHONY : test_discovery/fast

#=============================================================================
# Target rules for targets named ragger-dev

# Build rule for target.
ragger-dev: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-dev
.PHONY : ragger-dev

# fast build rule for target.
ragger-dev/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-dev.dir/build.make CMakeFiles/ragger-dev.dir/build
.PHONY : ragger-dev/fast

#=============================================================================
# Target rules for targets named ragger-tests

# Build rule for target.
ragger-tests: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-tests
.PHONY : ragger-tests

# fast build rule for target.
ragger-tests/fast:
	$(MAKE) $(MAKESILENT) -f tests/CMakeFiles/ragger-tests.dir/build.make tests/CMakeFiles/ragger-tests.dir/build
.PHONY : ragger-tests/fast

#=============================================================================
# Target rules for targets named ragger-benchmarks

# Build rule for target.
ragger-benchmarks: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 ragger-benchmarks
.PHONY : ragger-benchmarks

# fast build rule for target.
ragger-benchmarks/fast:
	$(MAKE) $(MAKESILENT) -f benchmarks/CMakeFiles/ragger-benchmarks.dir/build.make benchmarks/CMakeFiles/ragger-benchmarks.dir/build
.PHONY : ragger-benchmarks/fast

plugins/clients/lsp_client/LSPClientPlugin.o: plugins/clients/lsp_client/LSPClientPlugin.cpp.o
.PHONY : plugins/clients/lsp_client/LSPClientPlugin.o

# target to build an object file
plugins/clients/lsp_client/LSPClientPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lsp_client.dir/build.make CMakeFiles/lsp_client.dir/plugins/clients/lsp_client/LSPClientPlugin.cpp.o
.PHONY : plugins/clients/lsp_client/LSPClientPlugin.cpp.o

plugins/clients/lsp_client/LSPClientPlugin.i: plugins/clients/lsp_client/LSPClientPlugin.cpp.i
.PHONY : plugins/clients/lsp_client/LSPClientPlugin.i

# target to preprocess a source file
plugins/clients/lsp_client/LSPClientPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lsp_client.dir/build.make CMakeFiles/lsp_client.dir/plugins/clients/lsp_client/LSPClientPlugin.cpp.i
.PHONY : plugins/clients/lsp_client/LSPClientPlugin.cpp.i

plugins/clients/lsp_client/LSPClientPlugin.s: plugins/clients/lsp_client/LSPClientPlugin.cpp.s
.PHONY : plugins/clients/lsp_client/LSPClientPlugin.s

# target to generate assembly for a file
plugins/clients/lsp_client/LSPClientPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lsp_client.dir/build.make CMakeFiles/lsp_client.dir/plugins/clients/lsp_client/LSPClientPlugin.cpp.s
.PHONY : plugins/clients/lsp_client/LSPClientPlugin.cpp.s

plugins/discovery/test_discovery/TestDiscoveryPlugin.o: plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.o
.PHONY : plugins/discovery/test_discovery/TestDiscoveryPlugin.o

# target to build an object file
plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_discovery.dir/build.make CMakeFiles/test_discovery.dir/plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.o
.PHONY : plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.o

plugins/discovery/test_discovery/TestDiscoveryPlugin.i: plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.i
.PHONY : plugins/discovery/test_discovery/TestDiscoveryPlugin.i

# target to preprocess a source file
plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_discovery.dir/build.make CMakeFiles/test_discovery.dir/plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.i
.PHONY : plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.i

plugins/discovery/test_discovery/TestDiscoveryPlugin.s: plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.s
.PHONY : plugins/discovery/test_discovery/TestDiscoveryPlugin.s

# target to generate assembly for a file
plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/test_discovery.dir/build.make CMakeFiles/test_discovery.dir/plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.s
.PHONY : plugins/discovery/test_discovery/TestDiscoveryPlugin.cpp.s

plugins/integrations/git_integration/GitIntegrationPlugin.o: plugins/integrations/git_integration/GitIntegrationPlugin.cpp.o
.PHONY : plugins/integrations/git_integration/GitIntegrationPlugin.o

# target to build an object file
plugins/integrations/git_integration/GitIntegrationPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/git_integration.dir/build.make CMakeFiles/git_integration.dir/plugins/integrations/git_integration/GitIntegrationPlugin.cpp.o
.PHONY : plugins/integrations/git_integration/GitIntegrationPlugin.cpp.o

plugins/integrations/git_integration/GitIntegrationPlugin.i: plugins/integrations/git_integration/GitIntegrationPlugin.cpp.i
.PHONY : plugins/integrations/git_integration/GitIntegrationPlugin.i

# target to preprocess a source file
plugins/integrations/git_integration/GitIntegrationPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/git_integration.dir/build.make CMakeFiles/git_integration.dir/plugins/integrations/git_integration/GitIntegrationPlugin.cpp.i
.PHONY : plugins/integrations/git_integration/GitIntegrationPlugin.cpp.i

plugins/integrations/git_integration/GitIntegrationPlugin.s: plugins/integrations/git_integration/GitIntegrationPlugin.cpp.s
.PHONY : plugins/integrations/git_integration/GitIntegrationPlugin.s

# target to generate assembly for a file
plugins/integrations/git_integration/GitIntegrationPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/git_integration.dir/build.make CMakeFiles/git_integration.dir/plugins/integrations/git_integration/GitIntegrationPlugin.cpp.s
.PHONY : plugins/integrations/git_integration/GitIntegrationPlugin.cpp.s

plugins/parsers/cpp_parser/CppParserPlugin.o: plugins/parsers/cpp_parser/CppParserPlugin.cpp.o
.PHONY : plugins/parsers/cpp_parser/CppParserPlugin.o

# target to build an object file
plugins/parsers/cpp_parser/CppParserPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_parser.dir/build.make CMakeFiles/cpp_parser.dir/plugins/parsers/cpp_parser/CppParserPlugin.cpp.o
.PHONY : plugins/parsers/cpp_parser/CppParserPlugin.cpp.o

plugins/parsers/cpp_parser/CppParserPlugin.i: plugins/parsers/cpp_parser/CppParserPlugin.cpp.i
.PHONY : plugins/parsers/cpp_parser/CppParserPlugin.i

# target to preprocess a source file
plugins/parsers/cpp_parser/CppParserPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_parser.dir/build.make CMakeFiles/cpp_parser.dir/plugins/parsers/cpp_parser/CppParserPlugin.cpp.i
.PHONY : plugins/parsers/cpp_parser/CppParserPlugin.cpp.i

plugins/parsers/cpp_parser/CppParserPlugin.s: plugins/parsers/cpp_parser/CppParserPlugin.cpp.s
.PHONY : plugins/parsers/cpp_parser/CppParserPlugin.s

# target to generate assembly for a file
plugins/parsers/cpp_parser/CppParserPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/cpp_parser.dir/build.make CMakeFiles/cpp_parser.dir/plugins/parsers/cpp_parser/CppParserPlugin.cpp.s
.PHONY : plugins/parsers/cpp_parser/CppParserPlugin.cpp.s

plugins/parsers/treesitter_parser/TreeSitterParserPlugin.o: plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.o
.PHONY : plugins/parsers/treesitter_parser/TreeSitterParserPlugin.o

# target to build an object file
plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/treesitter_parser.dir/build.make CMakeFiles/treesitter_parser.dir/plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.o
.PHONY : plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.o

plugins/parsers/treesitter_parser/TreeSitterParserPlugin.i: plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.i
.PHONY : plugins/parsers/treesitter_parser/TreeSitterParserPlugin.i

# target to preprocess a source file
plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/treesitter_parser.dir/build.make CMakeFiles/treesitter_parser.dir/plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.i
.PHONY : plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.i

plugins/parsers/treesitter_parser/TreeSitterParserPlugin.s: plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.s
.PHONY : plugins/parsers/treesitter_parser/TreeSitterParserPlugin.s

# target to generate assembly for a file
plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/treesitter_parser.dir/build.make CMakeFiles/treesitter_parser.dir/plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.s
.PHONY : plugins/parsers/treesitter_parser/TreeSitterParserPlugin.cpp.s

plugins/rankers/bm25_ranker/BM25RankerPlugin.o: plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.o
.PHONY : plugins/rankers/bm25_ranker/BM25RankerPlugin.o

# target to build an object file
plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bm25_ranker.dir/build.make CMakeFiles/bm25_ranker.dir/plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.o
.PHONY : plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.o

plugins/rankers/bm25_ranker/BM25RankerPlugin.i: plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.i
.PHONY : plugins/rankers/bm25_ranker/BM25RankerPlugin.i

# target to preprocess a source file
plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bm25_ranker.dir/build.make CMakeFiles/bm25_ranker.dir/plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.i
.PHONY : plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.i

plugins/rankers/bm25_ranker/BM25RankerPlugin.s: plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.s
.PHONY : plugins/rankers/bm25_ranker/BM25RankerPlugin.s

# target to generate assembly for a file
plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bm25_ranker.dir/build.make CMakeFiles/bm25_ranker.dir/plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.s
.PHONY : plugins/rankers/bm25_ranker/BM25RankerPlugin.cpp.s

plugins/rankers/graph_ranker/GraphRankerPlugin.o: plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.o
.PHONY : plugins/rankers/graph_ranker/GraphRankerPlugin.o

# target to build an object file
plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/graph_ranker.dir/build.make CMakeFiles/graph_ranker.dir/plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.o
.PHONY : plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.o

plugins/rankers/graph_ranker/GraphRankerPlugin.i: plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.i
.PHONY : plugins/rankers/graph_ranker/GraphRankerPlugin.i

# target to preprocess a source file
plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/graph_ranker.dir/build.make CMakeFiles/graph_ranker.dir/plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.i
.PHONY : plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.i

plugins/rankers/graph_ranker/GraphRankerPlugin.s: plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.s
.PHONY : plugins/rankers/graph_ranker/GraphRankerPlugin.s

# target to generate assembly for a file
plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/graph_ranker.dir/build.make CMakeFiles/graph_ranker.dir/plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.s
.PHONY : plugins/rankers/graph_ranker/GraphRankerPlugin.cpp.s

src/core/ComprehensiveContextGenerator.o: src/core/ComprehensiveContextGenerator.cpp.o
.PHONY : src/core/ComprehensiveContextGenerator.o

# target to build an object file
src/core/ComprehensiveContextGenerator.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ComprehensiveContextGenerator.cpp.o
.PHONY : src/core/ComprehensiveContextGenerator.cpp.o

src/core/ComprehensiveContextGenerator.i: src/core/ComprehensiveContextGenerator.cpp.i
.PHONY : src/core/ComprehensiveContextGenerator.i

# target to preprocess a source file
src/core/ComprehensiveContextGenerator.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ComprehensiveContextGenerator.cpp.i
.PHONY : src/core/ComprehensiveContextGenerator.cpp.i

src/core/ComprehensiveContextGenerator.s: src/core/ComprehensiveContextGenerator.cpp.s
.PHONY : src/core/ComprehensiveContextGenerator.s

# target to generate assembly for a file
src/core/ComprehensiveContextGenerator.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ComprehensiveContextGenerator.cpp.s
.PHONY : src/core/ComprehensiveContextGenerator.cpp.s

src/core/ConfigManager.o: src/core/ConfigManager.cpp.o
.PHONY : src/core/ConfigManager.o

# target to build an object file
src/core/ConfigManager.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ConfigManager.cpp.o
.PHONY : src/core/ConfigManager.cpp.o

src/core/ConfigManager.i: src/core/ConfigManager.cpp.i
.PHONY : src/core/ConfigManager.i

# target to preprocess a source file
src/core/ConfigManager.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ConfigManager.cpp.i
.PHONY : src/core/ConfigManager.cpp.i

src/core/ConfigManager.s: src/core/ConfigManager.cpp.s
.PHONY : src/core/ConfigManager.s

# target to generate assembly for a file
src/core/ConfigManager.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ConfigManager.cpp.s
.PHONY : src/core/ConfigManager.cpp.s

src/core/ContextEngine.o: src/core/ContextEngine.cpp.o
.PHONY : src/core/ContextEngine.o

# target to build an object file
src/core/ContextEngine.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ContextEngine.cpp.o
.PHONY : src/core/ContextEngine.cpp.o

src/core/ContextEngine.i: src/core/ContextEngine.cpp.i
.PHONY : src/core/ContextEngine.i

# target to preprocess a source file
src/core/ContextEngine.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ContextEngine.cpp.i
.PHONY : src/core/ContextEngine.cpp.i

src/core/ContextEngine.s: src/core/ContextEngine.cpp.s
.PHONY : src/core/ContextEngine.s

# target to generate assembly for a file
src/core/ContextEngine.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/ContextEngine.cpp.s
.PHONY : src/core/ContextEngine.cpp.s

src/core/EventBus.o: src/core/EventBus.cpp.o
.PHONY : src/core/EventBus.o

# target to build an object file
src/core/EventBus.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/EventBus.cpp.o
.PHONY : src/core/EventBus.cpp.o

src/core/EventBus.i: src/core/EventBus.cpp.i
.PHONY : src/core/EventBus.i

# target to preprocess a source file
src/core/EventBus.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/EventBus.cpp.i
.PHONY : src/core/EventBus.cpp.i

src/core/EventBus.s: src/core/EventBus.cpp.s
.PHONY : src/core/EventBus.s

# target to generate assembly for a file
src/core/EventBus.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/EventBus.cpp.s
.PHONY : src/core/EventBus.cpp.s

src/core/FileUtils.o: src/core/FileUtils.cpp.o
.PHONY : src/core/FileUtils.o

# target to build an object file
src/core/FileUtils.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/FileUtils.cpp.o
.PHONY : src/core/FileUtils.cpp.o

src/core/FileUtils.i: src/core/FileUtils.cpp.i
.PHONY : src/core/FileUtils.i

# target to preprocess a source file
src/core/FileUtils.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/FileUtils.cpp.i
.PHONY : src/core/FileUtils.cpp.i

src/core/FileUtils.s: src/core/FileUtils.cpp.s
.PHONY : src/core/FileUtils.s

# target to generate assembly for a file
src/core/FileUtils.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/FileUtils.cpp.s
.PHONY : src/core/FileUtils.cpp.s

src/core/IndexManager.o: src/core/IndexManager.cpp.o
.PHONY : src/core/IndexManager.o

# target to build an object file
src/core/IndexManager.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/IndexManager.cpp.o
.PHONY : src/core/IndexManager.cpp.o

src/core/IndexManager.i: src/core/IndexManager.cpp.i
.PHONY : src/core/IndexManager.i

# target to preprocess a source file
src/core/IndexManager.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/IndexManager.cpp.i
.PHONY : src/core/IndexManager.cpp.i

src/core/IndexManager.s: src/core/IndexManager.cpp.s
.PHONY : src/core/IndexManager.s

# target to generate assembly for a file
src/core/IndexManager.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/IndexManager.cpp.s
.PHONY : src/core/IndexManager.cpp.s

src/core/Logger.o: src/core/Logger.cpp.o
.PHONY : src/core/Logger.o

# target to build an object file
src/core/Logger.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/Logger.cpp.o
.PHONY : src/core/Logger.cpp.o

src/core/Logger.i: src/core/Logger.cpp.i
.PHONY : src/core/Logger.i

# target to preprocess a source file
src/core/Logger.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/Logger.cpp.i
.PHONY : src/core/Logger.cpp.i

src/core/Logger.s: src/core/Logger.cpp.s
.PHONY : src/core/Logger.s

# target to generate assembly for a file
src/core/Logger.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/Logger.cpp.s
.PHONY : src/core/Logger.cpp.s

src/core/PluginManager.o: src/core/PluginManager.cpp.o
.PHONY : src/core/PluginManager.o

# target to build an object file
src/core/PluginManager.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/PluginManager.cpp.o
.PHONY : src/core/PluginManager.cpp.o

src/core/PluginManager.i: src/core/PluginManager.cpp.i
.PHONY : src/core/PluginManager.i

# target to preprocess a source file
src/core/PluginManager.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/PluginManager.cpp.i
.PHONY : src/core/PluginManager.cpp.i

src/core/PluginManager.s: src/core/PluginManager.cpp.s
.PHONY : src/core/PluginManager.s

# target to generate assembly for a file
src/core/PluginManager.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-core.dir/build.make CMakeFiles/ragger-core.dir/src/core/PluginManager.cpp.s
.PHONY : src/core/PluginManager.cpp.s

src/main.o: src/main.cpp.o
.PHONY : src/main.o

# target to build an object file
src/main.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger.dir/build.make CMakeFiles/ragger.dir/src/main.cpp.o
.PHONY : src/main.cpp.o

src/main.i: src/main.cpp.i
.PHONY : src/main.i

# target to preprocess a source file
src/main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger.dir/build.make CMakeFiles/ragger.dir/src/main.cpp.i
.PHONY : src/main.cpp.i

src/main.s: src/main.cpp.s
.PHONY : src/main.s

# target to generate assembly for a file
src/main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger.dir/build.make CMakeFiles/ragger.dir/src/main.cpp.s
.PHONY : src/main.cpp.s

src/tools/ragger-dev.o: src/tools/ragger-dev.cpp.o
.PHONY : src/tools/ragger-dev.o

# target to build an object file
src/tools/ragger-dev.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-dev.dir/build.make CMakeFiles/ragger-dev.dir/src/tools/ragger-dev.cpp.o
.PHONY : src/tools/ragger-dev.cpp.o

src/tools/ragger-dev.i: src/tools/ragger-dev.cpp.i
.PHONY : src/tools/ragger-dev.i

# target to preprocess a source file
src/tools/ragger-dev.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-dev.dir/build.make CMakeFiles/ragger-dev.dir/src/tools/ragger-dev.cpp.i
.PHONY : src/tools/ragger-dev.cpp.i

src/tools/ragger-dev.s: src/tools/ragger-dev.cpp.s
.PHONY : src/tools/ragger-dev.s

# target to generate assembly for a file
src/tools/ragger-dev.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-dev.dir/build.make CMakeFiles/ragger-dev.dir/src/tools/ragger-dev.cpp.s
.PHONY : src/tools/ragger-dev.cpp.s

src/ui/GUI.o: src/ui/GUI.cpp.o
.PHONY : src/ui/GUI.o

# target to build an object file
src/ui/GUI.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui-lib.dir/build.make CMakeFiles/ragger-gui-lib.dir/src/ui/GUI.cpp.o
.PHONY : src/ui/GUI.cpp.o

src/ui/GUI.i: src/ui/GUI.cpp.i
.PHONY : src/ui/GUI.i

# target to preprocess a source file
src/ui/GUI.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui-lib.dir/build.make CMakeFiles/ragger-gui-lib.dir/src/ui/GUI.cpp.i
.PHONY : src/ui/GUI.cpp.i

src/ui/GUI.s: src/ui/GUI.cpp.s
.PHONY : src/ui/GUI.s

# target to generate assembly for a file
src/ui/GUI.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui-lib.dir/build.make CMakeFiles/ragger-gui-lib.dir/src/ui/GUI.cpp.s
.PHONY : src/ui/GUI.cpp.s

src/ui/ragger-gui.o: src/ui/ragger-gui.cpp.o
.PHONY : src/ui/ragger-gui.o

# target to build an object file
src/ui/ragger-gui.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui.dir/build.make CMakeFiles/ragger-gui.dir/src/ui/ragger-gui.cpp.o
.PHONY : src/ui/ragger-gui.cpp.o

src/ui/ragger-gui.i: src/ui/ragger-gui.cpp.i
.PHONY : src/ui/ragger-gui.i

# target to preprocess a source file
src/ui/ragger-gui.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui.dir/build.make CMakeFiles/ragger-gui.dir/src/ui/ragger-gui.cpp.i
.PHONY : src/ui/ragger-gui.cpp.i

src/ui/ragger-gui.s: src/ui/ragger-gui.cpp.s
.PHONY : src/ui/ragger-gui.s

# target to generate assembly for a file
src/ui/ragger-gui.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-gui.dir/build.make CMakeFiles/ragger-gui.dir/src/ui/ragger-gui.cpp.s
.PHONY : src/ui/ragger-gui.cpp.s

src/ui/simple_console.o: src/ui/simple_console.cpp.o
.PHONY : src/ui/simple_console.o

# target to build an object file
src/ui/simple_console.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-console.dir/build.make CMakeFiles/ragger-console.dir/src/ui/simple_console.cpp.o
.PHONY : src/ui/simple_console.cpp.o

src/ui/simple_console.i: src/ui/simple_console.cpp.i
.PHONY : src/ui/simple_console.i

# target to preprocess a source file
src/ui/simple_console.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-console.dir/build.make CMakeFiles/ragger-console.dir/src/ui/simple_console.cpp.i
.PHONY : src/ui/simple_console.cpp.i

src/ui/simple_console.s: src/ui/simple_console.cpp.s
.PHONY : src/ui/simple_console.s

# target to generate assembly for a file
src/ui/simple_console.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-console.dir/build.make CMakeFiles/ragger-console.dir/src/ui/simple_console.cpp.s
.PHONY : src/ui/simple_console.cpp.s

src/ui/working_gui.o: src/ui/working_gui.cpp.o
.PHONY : src/ui/working_gui.o

# target to build an object file
src/ui/working_gui.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-working-gui.dir/build.make CMakeFiles/ragger-working-gui.dir/src/ui/working_gui.cpp.o
.PHONY : src/ui/working_gui.cpp.o

src/ui/working_gui.i: src/ui/working_gui.cpp.i
.PHONY : src/ui/working_gui.i

# target to preprocess a source file
src/ui/working_gui.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-working-gui.dir/build.make CMakeFiles/ragger-working-gui.dir/src/ui/working_gui.cpp.i
.PHONY : src/ui/working_gui.cpp.i

src/ui/working_gui.s: src/ui/working_gui.cpp.s
.PHONY : src/ui/working_gui.s

# target to generate assembly for a file
src/ui/working_gui.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/ragger-working-gui.dir/build.make CMakeFiles/ragger-working-gui.dir/src/ui/working_gui.cpp.s
.PHONY : src/ui/working_gui.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... bm25_ranker"
	@echo "... cpp_parser"
	@echo "... git_integration"
	@echo "... graph_ranker"
	@echo "... lsp_client"
	@echo "... ragger"
	@echo "... ragger-benchmarks"
	@echo "... ragger-console"
	@echo "... ragger-core"
	@echo "... ragger-dev"
	@echo "... ragger-gui"
	@echo "... ragger-gui-lib"
	@echo "... ragger-tests"
	@echo "... ragger-working-gui"
	@echo "... test_discovery"
	@echo "... treesitter_parser"
	@echo "... plugins/clients/lsp_client/LSPClientPlugin.o"
	@echo "... plugins/clients/lsp_client/LSPClientPlugin.i"
	@echo "... plugins/clients/lsp_client/LSPClientPlugin.s"
	@echo "... plugins/discovery/test_discovery/TestDiscoveryPlugin.o"
	@echo "... plugins/discovery/test_discovery/TestDiscoveryPlugin.i"
	@echo "... plugins/discovery/test_discovery/TestDiscoveryPlugin.s"
	@echo "... plugins/integrations/git_integration/GitIntegrationPlugin.o"
	@echo "... plugins/integrations/git_integration/GitIntegrationPlugin.i"
	@echo "... plugins/integrations/git_integration/GitIntegrationPlugin.s"
	@echo "... plugins/parsers/cpp_parser/CppParserPlugin.o"
	@echo "... plugins/parsers/cpp_parser/CppParserPlugin.i"
	@echo "... plugins/parsers/cpp_parser/CppParserPlugin.s"
	@echo "... plugins/parsers/treesitter_parser/TreeSitterParserPlugin.o"
	@echo "... plugins/parsers/treesitter_parser/TreeSitterParserPlugin.i"
	@echo "... plugins/parsers/treesitter_parser/TreeSitterParserPlugin.s"
	@echo "... plugins/rankers/bm25_ranker/BM25RankerPlugin.o"
	@echo "... plugins/rankers/bm25_ranker/BM25RankerPlugin.i"
	@echo "... plugins/rankers/bm25_ranker/BM25RankerPlugin.s"
	@echo "... plugins/rankers/graph_ranker/GraphRankerPlugin.o"
	@echo "... plugins/rankers/graph_ranker/GraphRankerPlugin.i"
	@echo "... plugins/rankers/graph_ranker/GraphRankerPlugin.s"
	@echo "... src/core/ComprehensiveContextGenerator.o"
	@echo "... src/core/ComprehensiveContextGenerator.i"
	@echo "... src/core/ComprehensiveContextGenerator.s"
	@echo "... src/core/ConfigManager.o"
	@echo "... src/core/ConfigManager.i"
	@echo "... src/core/ConfigManager.s"
	@echo "... src/core/ContextEngine.o"
	@echo "... src/core/ContextEngine.i"
	@echo "... src/core/ContextEngine.s"
	@echo "... src/core/EventBus.o"
	@echo "... src/core/EventBus.i"
	@echo "... src/core/EventBus.s"
	@echo "... src/core/FileUtils.o"
	@echo "... src/core/FileUtils.i"
	@echo "... src/core/FileUtils.s"
	@echo "... src/core/IndexManager.o"
	@echo "... src/core/IndexManager.i"
	@echo "... src/core/IndexManager.s"
	@echo "... src/core/Logger.o"
	@echo "... src/core/Logger.i"
	@echo "... src/core/Logger.s"
	@echo "... src/core/PluginManager.o"
	@echo "... src/core/PluginManager.i"
	@echo "... src/core/PluginManager.s"
	@echo "... src/main.o"
	@echo "... src/main.i"
	@echo "... src/main.s"
	@echo "... src/tools/ragger-dev.o"
	@echo "... src/tools/ragger-dev.i"
	@echo "... src/tools/ragger-dev.s"
	@echo "... src/ui/GUI.o"
	@echo "... src/ui/GUI.i"
	@echo "... src/ui/GUI.s"
	@echo "... src/ui/ragger-gui.o"
	@echo "... src/ui/ragger-gui.i"
	@echo "... src/ui/ragger-gui.s"
	@echo "... src/ui/simple_console.o"
	@echo "... src/ui/simple_console.i"
	@echo "... src/ui/simple_console.s"
	@echo "... src/ui/working_gui.o"
	@echo "... src/ui/working_gui.i"
	@echo "... src/ui/working_gui.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

